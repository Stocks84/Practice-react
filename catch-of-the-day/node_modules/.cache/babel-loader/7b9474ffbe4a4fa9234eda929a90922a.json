{"ast":null,"code":"var _jsxFileName = \"/workspace/Practice-react/catch-of-the-day/src/components/Order.js\";\nimport React from \"react\";\nimport { formatPrice } from \"../helpers\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Order extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.renderOrder = key => {\n      const fish = this.props.fishes[key];\n      const count = this.props.order[key];\n      const isAvailable = fish && fish.status === 'available';\n      // Make sure the fish is loaded before we continue!\n      if (!fish) return null;\n      if (!isAvailable) {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Sorry \", fish ? fish.name : 'fish', \" is no longer available\"]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(CSSTransition, {\n        classNames: \"order\",\n        timeout: {\n          enter: 250,\n          exit: 250\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [count, \" lbs \", fish.name, formatPrice(count * fish.price), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.props.removeFromOrder(key),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 21\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }, this), \";\"]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this);\n    };\n  }\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const fish = this.props.fishes[key];\n      const count = this.props.order[key];\n      const isAvailable = fish && fish.status === 'available';\n      if (isAvailable) {\n        return prevTotal + count * fish.price;\n      }\n      return prevTotal;\n    }, 0);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-wrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TransitionGroup, {\n        component: \"ul\",\n        className: \"order\",\n        children: orderIds.map(this.renderOrder)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"total\",\n        children: [\"Total:\", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: formatPrice(total)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Order;","map":{"version":3,"names":["React","formatPrice","TransitionGroup","CSSTransition","jsxDEV","_jsxDEV","Order","Component","constructor","arguments","renderOrder","key","fish","props","fishes","count","order","isAvailable","status","children","name","fileName","_jsxFileName","lineNumber","columnNumber","classNames","timeout","enter","exit","price","onClick","removeFromOrder","render","orderIds","Object","keys","total","reduce","prevTotal","className","component","map"],"sources":["/workspace/Practice-react/catch-of-the-day/src/components/Order.js"],"sourcesContent":["import React from \"react\";\nimport { formatPrice } from \"../helpers\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nclass Order extends React.Component {\n    renderOrder = key => {\n        const fish = this.props.fishes[key];\n        const count = this.props.order[key];\n        const isAvailable = fish && fish.status === 'available';\n        // Make sure the fish is loaded before we continue!\n        if(!fish) return null;\n\n        if(!isAvailable) {\n            return (\n            <li key={key}>\n                Sorry {fish ? fish.name : 'fish'} is no longer available\n            </li>\n            );\n        }\n        return (\n            <CSSTransition classNames=\"order\" key={key} timeout={{ enter:250, exit:250 }}>\n                <li key={key}>\n                    {count} lbs {fish.name}\n                    {formatPrice(count * fish.price)}\n                    <button onClick={() => this.props.removeFromOrder(key)}>&times;</button>\n                </li>;\n            </CSSTransition>\n        );\n    };\n\n    render() {\n        const orderIds = Object.keys(this.props.order);\n        const total = orderIds.reduce((prevTotal, key) => {\n            const fish = this.props.fishes[key];\n            const count = this.props.order[key];\n            const isAvailable = fish && fish.status === 'available';\n            if(isAvailable) {\n                return prevTotal + (count * fish.price);\n            }\n            return prevTotal;\n        }, 0);\n\n        return (\n            <div className=\"order-wrap\">\n                <h2>Order</h2>\n                <TransitionGroup component=\"ul\" className=\"order\">\n                    {orderIds.map(this.renderOrder)}\n                </TransitionGroup>\n                <div className=\"total\">\n                    Total:\n                    <strong>{formatPrice(total)}</strong>\n                </div>\n            </div>\n            \n        )\n    }\n}\n\nexport default Order;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}